// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NEURONLOGISTIC.BusinessLayer.Concrate;

namespace NEURONLOGISTIC.BusinessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Airline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.CargoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ShipmentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.HasIndex("ShipmentTypeId");

                    b.ToTable("CargoTypes");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AirCreditDay")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreditDay")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("InvoiceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MersisNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PurchaseCurrentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SalesCurrentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SalespersonAirId")
                        .HasColumnType("int");

                    b.Property<int?>("SalespersonExportId")
                        .HasColumnType("int");

                    b.Property<int?>("SalespersonImportId")
                        .HasColumnType("int");

                    b.Property<int?>("SalespersonSupportId")
                        .HasColumnType("int");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TaxOffice")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("WebLink")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("InvoiceTypeId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("SalespersonAirId");

                    b.HasIndex("SalespersonExportId");

                    b.HasIndex("SalespersonImportId");

                    b.HasIndex("SalespersonSupportId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("CompanyTypes");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Container", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Teu")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("DecimalDigits")
                        .HasColumnType("smallint");

                    b.Property<string>("DecimalSeparator")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("SpaceBetweenAmountAndSymbol")
                        .HasColumnType("bit");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("SymbolOnLeft")
                        .HasColumnType("bit");

                    b.Property<string>("ThousandsSeparator")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Customs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Customss");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.CustomsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("CustomsTypes");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FatherFullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("LeaveWork")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherFullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartWork")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("EntityStatuses");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.InvoiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("InvoiceTypes");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PortOffice")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.PackageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("PackageTypes");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Port", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Imo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("YearConstruction")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.ShipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("ShipmentTypes");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Voyage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntitiyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByEmployeeId");

                    b.HasIndex("DeletedByEmployeeId");

                    b.HasIndex("EntitiyStatusId");

                    b.HasIndex("LastModifiedByEmployeeId");

                    b.HasIndex("ShipId");

                    b.ToTable("Voyages");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Airline", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Airport", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.CargoType", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.ShipmentType", "ShipmentType")
                        .WithMany()
                        .HasForeignKey("ShipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");

                    b.Navigation("ShipmentType");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.City", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Company", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.CompanyType", "CompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.InvoiceType", "InvoiceType")
                        .WithMany()
                        .HasForeignKey("InvoiceTypeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "SalespersonAirEmployee")
                        .WithMany()
                        .HasForeignKey("SalespersonAirId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "SalespersonExportEmployee")
                        .WithMany()
                        .HasForeignKey("SalespersonExportId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "SalespersonImportEmployee")
                        .WithMany()
                        .HasForeignKey("SalespersonImportId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "SalespersonSupportEmployee")
                        .WithMany()
                        .HasForeignKey("SalespersonSupportId");

                    b.Navigation("City");

                    b.Navigation("CompanyType");

                    b.Navigation("Country");

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("Currency");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("InvoiceType");

                    b.Navigation("LastModifiedByEmployee");

                    b.Navigation("PaymentType");

                    b.Navigation("SalespersonAirEmployee");

                    b.Navigation("SalespersonExportEmployee");

                    b.Navigation("SalespersonImportEmployee");

                    b.Navigation("SalespersonSupportEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.CompanyType", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Container", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Country", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Currency", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Customs", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.InvoiceType", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Line", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.PackageType", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.PaymentType", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Port", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Ship", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Term", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");
                });

            modelBuilder.Entity("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Voyage", b =>
                {
                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByEmployeeId");

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntitiyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Employee", "LastModifiedByEmployee")
                        .WithMany()
                        .HasForeignKey("LastModifiedByEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEURONLOGISTIC.EntityLayer.Concrate.Definations.Ship", "Ship")
                        .WithMany()
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EntityStatus");

                    b.Navigation("LastModifiedByEmployee");

                    b.Navigation("Ship");
                });
#pragma warning restore 612, 618
        }
    }
}
